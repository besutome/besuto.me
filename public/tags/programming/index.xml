<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>シババルーン </title>
    <link>http://localhost:1313/tags/programming/</link>
    <language>en-us</language>
    <author>バルーンボーイ</author>
    <rights>(C) 2015</rights>
    <updated>2015-07-09 16:12:23 &#43;0900 JST</updated>

    
      
        <item>
          <title>git-hate-commit</title>
          <link>http://localhost:1313/blog/post/post/git-hate-commit/</link>
          <pubDate>Thu, 09 Jul 2015 16:12:23 JST</pubDate>
          <author>バルーンボーイ</author>
          <guid>http://localhost:1313/blog/post/post/git-hate-commit/</guid>
          <description>

&lt;h1 id=&#34;gitで速攻-雑にコミットそれとかっこいいgit-log:b634de63fed17582dea4964c74c312c3&#34;&gt;gitで速攻＆雑にコミットそれとかっこいいgit log&lt;/h1&gt;

&lt;h3 id=&#34;git-now:b634de63fed17582dea4964c74c312c3&#34;&gt;git-now&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/iwata/git-now&#34; title=&#34;git-now&#34;&gt;git-now&lt;/a&gt;はコミットメッセージを勝手に現在時刻にして、コミットしてくれるコマンド。&lt;br /&gt;
一時コミットするやつですね。&lt;/p&gt;

&lt;p&gt;とりあえずコミットするのは賛否両論ありますが、コミットしないリスクを考えると雑にでもコミットしたほうが良さげ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install git-now
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Macならこれで入ります。設定は&lt;code&gt;~/.gitconfig&lt;/code&gt;にこんな感じで。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;n  = now --all --stat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aliasの文字はご自由に。 これでaddからコミットまで自動でやってくれます。&lt;/p&gt;

&lt;h3 id=&#34;tig:b634de63fed17582dea4964c74c312c3&#34;&gt;tig&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://sue445.hatenablog.com/entry/2014/08/07/015811&#34; title=&#34;tigから git rebase -i したらいろいろ捗った&#34;&gt;tigから git rebase -i したらいろいろ捗った&lt;/a&gt;を参考に&lt;code&gt;tig&lt;/code&gt;からrebaseをできるように。&lt;br /&gt;
&lt;code&gt;tig&lt;/code&gt;はターミナル上でコミットツリーをいいかんじにしてくれる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install tig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;tig&lt;/code&gt;もこれでOK。 そして&lt;code&gt;~/.tigrc&lt;/code&gt;に以下を記述します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind main C !git rebase -i %(commit)
bind diff C !git rebase -i %(commit)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こちらも文字はご自由に。 自分はcommitのCにしてます。&lt;br /&gt;
これでtig上のわかりやすいコミットツリーでrebaseできます。&lt;br /&gt;
ちなみに選択したコミットより最新のものは全部編集できます。&lt;/p&gt;

&lt;h3 id=&#34;git-logs:b634de63fed17582dea4964c74c312c3&#34;&gt;git logs&lt;/h3&gt;

&lt;p&gt;gitのデフォルトのlogって見にくいので、いろいろ試した結果これが一番かっこよくなります。&lt;br /&gt;
これも&lt;code&gt;〜/.gitconfig&lt;/code&gt;に記述。&lt;br /&gt;
aliasもなんでもいいですが、logとかだと競合するので別のものがオススメ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;logs = log --all --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&#39; --abbrev-commit --date=relative
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうすると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;* 2fe4f9b - (HEAD -&amp;gt; master) [from now] 2015/07/09 07:58:32 (14 minutes ago) &amp;lt;名前&amp;gt;
* 85530f8 - (origin/master) [from now] 2015/07/09 03:17:49 (5 hours ago) &amp;lt;名前&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;みたいな感じに出力されます。 tree表示されるので、ブランチごとの分岐もわかりやすいです。&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
